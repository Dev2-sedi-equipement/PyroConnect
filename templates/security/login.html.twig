{% extends 'base.html.twig' %}

{% block title %}Log in!{% endblock %}

{% block body %}

<body id ="LoginContent"style="background-color: none;">
    <section class="form-login d-flex justify-content-center align-items-center " style="height:100vh;">
      
        <div class="contentLogin d-flex justify-content-center">
            <form method="post" class="d-flex justify-content-center flex-column" id="formLogin">
              {% for message in app.flashes('success') %}
                    <div class="alert alert-success">
                        {{ message }}
                    </div>  
                {% endfor %}
      
                {% if error %}
                    <div class="alert alert-danger">{{ error }}</div>
                {% endif %}

                <div class="titleLogin">
                    <h1 class="h1-login mb-3 font-weight-normal text-center">Espace de connexion</h1>
                </div>
        
                <input type="email" value="{{ last_username }}" name="email" id="inputEmail" class="emailInput input" autocomplete="email" placeholder="Email">

            
            
                <div class="toggle-password-container"> 
                    <input type="password" name="password" id="inputPassword" class="mdpInput input w-100" autocomplete="current-password" placeholder="Mot de passe"
                    {{ stimulus_controller('symfony/ux-toggle-password/toggle-password', {
                        visibleLabel: '', 
                        hiddenLabel: '', 
                        visibleIcon: '<i class="fas fa-eye-slash"></i>', 
                        hiddenIcon: '<i class="fas fa-eye"></i>', 
                        buttonClasses: ['toggle-password-button'],
                    }) }}
                    >
                </div>
                 <label>
                    <input type="checkbox" name="_remember_me" checked>
                    Se souvenir de moi 
                </label>
                <input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}">
                <a href="{{ path('app_forgot_password_request', {'email': last_username}) }}" id="resetPasswordBtn" class="text-black" style="max-width: 138px"><p class="mt-2"><em>Mot de passe oublié</em></p></a>
                 
                <button class="btn btn-lg black text-white mt-4 btn-Connexion" type="submit">
                    Se connecter
                </button>
            
            </form>
        </div>
    </section>

    <style>
        .toggle-password-button{
            top: 2.75rem !important;
        }
    </style>
</body>  
  



 <script>
        const resetPasswordBtn = document.querySelector("#resetPasswordBtn");
        resetPasswordBtn.addEventListener("click", (e)=>{
            e.preventDefault();
            const emailValue = document.querySelector("#inputEmail").value;
            window.location.href = "{{ path('app_forgot_password_request') }}" + '?email=' + emailValue;
        });
    </script>
    
    <script data-turbo-track="reload">
        const email = document.querySelector("#inputEmail");       
        const password = document.querySelector("#inputPassword");

        // Fonction pour appliquer ou retirer les classes mystyle et empty en fonction des valeurs des champs
        function applyStyle() {
            email.classList.toggle("mystyle", email.value.trim() !== "");
            email.classList.toggle("empty", email.value.trim() === "");

            password.classList.toggle("mystyle", password.value.trim() !== "");
            password.classList.toggle("empty", password.value.trim() === "");
        }


        // Appliquer le style lors du chargement de la page
        applyStyle();

        // Appliquer le style à chaque changement dans les champs d'entrée
        email.addEventListener("input", applyStyle);
        password.addEventListener("input", applyStyle);
    </script>
{% endblock %}
